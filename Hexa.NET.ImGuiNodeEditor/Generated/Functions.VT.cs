// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGuiNodeEditor
{
	public unsafe partial class NodeEditor
	{
		internal static VTable vt;

		public static void InitApi()
		{
			vt = new VTable(LibraryLoader.LoadLibrary(), 108);
			vt.Load(0, "SetCurrentEditor");
			vt.Load(1, "GetCurrentEditor");
			vt.Load(2, "CreateEditor");
			vt.Load(3, "DestroyEditor");
			vt.Load(4, "GetConfig");
			vt.Load(5, "GetStyle");
			vt.Load(6, "GetStyleColorName");
			vt.Load(7, "PushStyleColor");
			vt.Load(8, "PopStyleColor");
			vt.Load(9, "PushStyleVar");
			vt.Load(10, "PopStyleVar");
			vt.Load(11, "Begin");
			vt.Load(12, "End");
			vt.Load(13, "BeginNode");
			vt.Load(14, "BeginPin");
			vt.Load(15, "PinRect");
			vt.Load(16, "PinPivotRect");
			vt.Load(17, "PinPivotSize");
			vt.Load(18, "PinPivotScale");
			vt.Load(19, "PinPivotAlignment");
			vt.Load(20, "EndPin");
			vt.Load(21, "Group");
			vt.Load(22, "EndNode");
			vt.Load(23, "BeginGroupHint");
			vt.Load(24, "GetGroupMin");
			vt.Load(25, "GetGroupMax");
			vt.Load(26, "GetHintForegroundDrawList");
			vt.Load(27, "GetHintBackgroundDrawList");
			vt.Load(28, "EndGroupHint");
			vt.Load(29, "GetNodeBackgroundDrawList");
			vt.Load(30, "Link");
			vt.Load(31, "Flow");
			vt.Load(32, "BeginCreate");
			vt.Load(33, "QueryNewLink");
			vt.Load(34, "QueryNewNode");
			vt.Load(35, "AcceptNewItem");
			vt.Load(36, "RejectNewItem");
			vt.Load(37, "EndCreate");
			vt.Load(38, "BeginDelete");
			vt.Load(39, "QueryDeletedLink");
			vt.Load(40, "QueryDeletedNode");
			vt.Load(41, "AcceptDeletedItem");
			vt.Load(42, "RejectDeletedItem");
			vt.Load(43, "EndDelete");
			vt.Load(44, "SetNodePosition");
			vt.Load(45, "SetGroupSize");
			vt.Load(46, "GetNodePosition");
			vt.Load(47, "GetNodeSize");
			vt.Load(48, "CenterNodeOnScreen");
			vt.Load(49, "SetNodeZPosition");
			vt.Load(50, "GetNodeZPosition");
			vt.Load(51, "RestoreNodeState");
			vt.Load(52, "Suspend");
			vt.Load(53, "Resume");
			vt.Load(54, "IsSuspended");
			vt.Load(55, "IsActive");
			vt.Load(56, "HasSelectionChanged");
			vt.Load(57, "GetSelectedObjectCount");
			vt.Load(58, "GetSelectedNodes");
			vt.Load(59, "GetSelectedLinks");
			vt.Load(60, "IsNodeSelected");
			vt.Load(61, "IsLinkSelected");
			vt.Load(62, "ClearSelection");
			vt.Load(63, "SelectNode");
			vt.Load(64, "SelectLink");
			vt.Load(65, "DeselectNode");
			vt.Load(66, "DeselectLink");
			vt.Load(67, "DeleteNode");
			vt.Load(68, "DeleteLink");
			vt.Load(69, "HasAnyLinks");
			vt.Load(70, "BreakLinks");
			vt.Load(71, "NavigateToContent");
			vt.Load(72, "NavigateToSelection");
			vt.Load(73, "ShowNodeContextMenu");
			vt.Load(74, "ShowPinContextMenu");
			vt.Load(75, "ShowLinkContextMenu");
			vt.Load(76, "ShowBackgroundContextMenu");
			vt.Load(77, "EnableShortcuts");
			vt.Load(78, "AreShortcutsEnabled");
			vt.Load(79, "BeginShortcut");
			vt.Load(80, "AcceptCut");
			vt.Load(81, "AcceptCopy");
			vt.Load(82, "AcceptPaste");
			vt.Load(83, "AcceptDuplicate");
			vt.Load(84, "AcceptCreateNode");
			vt.Load(85, "GetActionContextSize");
			vt.Load(86, "GetActionContextNodes");
			vt.Load(87, "GetActionContextLinks");
			vt.Load(88, "EndShortcut");
			vt.Load(89, "GetCurrentZoom");
			vt.Load(90, "GetHoveredNode");
			vt.Load(91, "GetHoveredPin");
			vt.Load(92, "GetHoveredLink");
			vt.Load(93, "GetDoubleClickedNode");
			vt.Load(94, "GetDoubleClickedPin");
			vt.Load(95, "GetDoubleClickedLink");
			vt.Load(96, "IsBackgroundClicked");
			vt.Load(97, "IsBackgroundDoubleClicked");
			vt.Load(98, "GetBackgroundClickButtonIndex");
			vt.Load(99, "GetBackgroundDoubleClickButtonIndex");
			vt.Load(100, "GetLinkPins");
			vt.Load(101, "PinHadAnyLinks");
			vt.Load(102, "GetScreenSize");
			vt.Load(103, "ScreenToCanvas");
			vt.Load(104, "CanvasToScreen");
			vt.Load(105, "GetNodeCount");
			vt.Load(106, "GetOrderedNodeIds");
		}

		public static void FreeApi()
		{
			vt.Free();
		}
	}
}
